#1. pem 으로 boot를 제외한 노드에 접속후, boot--> 다른 노드간 접속 가능하게 함
- name: '1. Linux Server Provisioning'
  hosts: 'all'
  gather_facts: true
  #user_param에 작성된 접속 username
  remote_user: '{% for name, item in node.items() %}{% for value in item %}{% if inventory_hostname == value.name %}{{ value.user_id }}{% endif %}{% endfor %}{% endfor %}'
  vars_files:
    - ../../automation_config.yaml

  vars:
    ansible_become: true
    ansible_user: '{% for name, item in node.items() %}{% for value in item %}{% if inventory_hostname == value.name %}{{ value.user_id }}{% endif %}{% endfor %}{% endfor %}'
    #pem key를 사용하는 경우
    ansible_ssh_private_key_file: '{{ util.pemkey }}'
    #password를 사용하는 경우
    ansible_ssh_pass: '{% for name, item in node.items() %}{% for value in item %}{% if inventory_hostname == value.name %}{{ value.user_pwd }}{% endif %}{% endfor %}{% endfor %}'
    ansible_become_pass: "{{ ansible_ssh_pass }}"
    ansible_ssh_common_args: "-oPubkeyAuthentication=no"

 # 각 노드마다 pwd로 접속 할 수 있도록
  tasks:
  - name: '1-1. Change SSH PermitRootLogin'
    lineinfile:
      dest: '{{ item.dest }}'
      regexp: '{{ item.regexp }}'
      line: '{{ item.line }}'
      state: present
      backup: yes
    with_items:
      - { dest: '/etc/ssh/sshd_config', regexp: 'PasswordAuthentication no', line: 'PasswordAuthentication yes'}
      - { dest: '/etc/ssh/sshd_config', regexp: '#PermitRootLogin yes', line: 'PermitRootLogin yes'}
      - { dest: '/etc/ssh/sshd_config', regexp: 'PermitRootLogin no', line: 'PermitRootLogin yes'} 
    notify:
      - restart ssh     
    register: result

  handlers:
  - name: restart ssh
    service:
      name: sshd
      state: restarted